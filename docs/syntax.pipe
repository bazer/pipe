h|Element syntax
Everything is a Pipe element. An element has a |name, a |size, one or more |properties and |contents. 

\[ denotes the start of an element, \] denotes the end. \| denotes the start of element contents. Everything after the \| up to the end of the element are contents of the element.

h|Escaping
The \\ character is used for escaping a special character.

h|Comments
The \% character, placed first on a line, is used for commenting out the rest of that line. 
\/\: denotes the start of a comment block and \:\/ ends it.

h|Name
The first word after the start of the element is the element name.

h|Size
Immediately after the name an optional size can be declared with a number. For instance the |header element accepts sizes 1 through 6 and is written as \[h1\|\].

h|Size modifier
A |size can be modified by using + and - instead of a number. The size is then added or subtracted from the last declared size of the same element type, eg. |header, and then applied. A size modifier can also be added after the number, it then applies to the size of the next element of the same type.

h:ref("property", "properties")|Property
Properties of an element are declared after the element name and size and must be preceded by a b|: character. A newline is also allowed in block elements. A property consists of a name and one or several arguments. The arguments are all enclosed in parenthesis and separated by commas. Arguments can be inclosed by " and will then be read as text, without the need for escaping. Arguments only have values and which argument is which is determined by order. An element can have a default property and if only the first argument of the default property is declared, the name of the property and the parenthesis can be omitted.

h|Contents
The contents of the element follows the \|-character. The contents can be either text, elements or both. In this way elements can be nested to an arbitrary depth.

h|Text


h|Word


h|Spaces
Spaces at the beginning of a line are discarded. More spaces than one in succession are discarded. Spaces at the beginning and at the end of a r|paragraph are discarded. Explicit spaces can be inserted using the [r|explicit space] element.

h|Newlines
Newlines are denoted solely by the \n character, all \r character are discarded. Newlines are only used to determine where elements end. Use [r:expnl|explicit newlines] to insert new lines in to text.

h:ref("space_bridge")|Space bridges


An element can either be a block element or an inline element.

h|Block elements
Block elements are top level elements that contain other elements and can not be contained within text.
The brackets can be omitted if the element begins on a new line. The contents then end at the first subsequent newline character.
Newlines are allowed after the name, between properties and between arguments in block elements.

h|Inline elements
Inline elements are contained within block elements and text. They are used to markup specific portions of text. 
The brackets for inline elements can be omitted if no r|properties are declared. The contents then become the first word immediately following the \|. If the word is ended by one or more dots or commas, these are not included. It is allowed to bridge words by using a r|space_bridge, in this case all the bridged words are included and the space bridges counted as normal spaces.

